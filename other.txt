<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>陆金申华零售业务系统</title>
    <link href="css/ljindex.css" rel="stylesheet" />
    <!-- IE 9以下-->
    <!-- [if lte IE 9 ] >
        <script>
            var newTags=["header","footer","aside","article","canvas","details","figcaption","figure","hgroup","menu","nav","section","summary","time","mark","audio","video"];
            for(var i=0;i<newTags.length;i++){
                document.createElement(newTags[i]);
            }
        </script>
    <![endif]-->

</head>
<body>
<div id="home_container" class="boss_container">
    <div class="content">
        <!-- 待办任务 -->
        <div class="section left_section wait_work">
            <div class="header">
                待办任务
            </div>
            <ul>
                <li class="paragraph">
                    <p>申请提报</p>
                    <span>2</span>
                </li>
                <li class="paragraph">
                    <p>合同信息录入</p>
                    <span>5</span>
                </li>
                <li class="paragraph">
                    <p>合同下载</p>
                    <span>6</span>
                </li>
                <li class="paragraph">
                    <p>请款</p>
                    <span>10</span>
                </li>
            </ul>
        </div>
        <!-- 总统计 -->
        <div class="section center_section boss_count">
            <ul>
                <li class="sum_money">
                    <div>
                        <label>总资产</label>
                        <h3>¥<span id="sumOne">300,000.00</span></h3>
                    </div>
                    <p>
                        <span id="perOne">200</span>笔
                    </p>
                </li>
                <li class="back_money">
                    <div>
                        <label>租金回笼量</label>
                        <h3>¥<span id="sumTwo">300,000.00</span></h3>
                    </div>
                    <p>
                        <span id="perTwo">66.66</span>%
                    </p>
                </li>
                <li class="expect_num">
                    <div>
                        <label>预期量</label>
                        <h3><span id="sumThree">20</span>笔</h3>
                    </div>
                    <p>
                        <span id="perThree">2</span>%
                    </p>
                </li>
                <li class="recover_car">
                    <div>
                        <label>车辆回收率</label>
                        <h3><span id="sumFour">10辆</span></h3>
                    </div>
                    <p>
                        <span id="perFour">0.1</span>%
                    </p>
                </li>
            </ul>
        </div>
        <!-- 按渠道按车型统计-->
        <div class="section right_section car_count">
            <div id="" class="header tabheader">
                <a class="active" onclick="showTab(event,1)">按渠道统计</a><a onclick="showTab(event,2)">按车型统计</a>
            </div>
            <div class="tabbody">
                <div class="tabpanel" style="height:154px;">
                    <!--渠道统计内容 & 车型统计内容-->

                    <svg  xmlns="http://www.w3.org/2000/svg" width="120px" height="120px" id="circlePic" style="margin: 18px 40px;">
                        <circle r="43" cx="60" cy="60" fill="#fff" id="coverCircle"></circle>
                        <!-- 此处是饼状图-->
                    </svg>
                    <div id="circlePicVml" style="position: absolute; top: 18px; right: 0; bottom: 0; left: 40px;">

                    </div>
                    <div class="center_count">
                        <!-- 饼状图中心区域内容-->
                        <p id="sumNum">0</p>
                        <label for="">总销售量</label>
                    </div>
                    <ul class="count_list" id="countList">
                        <!-- 右侧列表-->
                    </ul>
                </div>
                <div class="tabpanel" style="height:154px;">
                    <!--渠道统计内容 & 车型统计内容-->


                    <svg width="120px" height="120px" id="circlePic2" style="margin: 18px 40px;">
                        <circle r="43" cx="60" cy="60" fill="#fff" id="coverCircle2"></circle>
                        <!-- 此处是饼状图-->
                    </svg>
                    <div id="circlePic2Vml" style="position: absolute; top: 18px; right: 0; bottom: 0; left: 40px;">

                    </div>
                    <div class="center_count">
                        <!-- 饼状图中心区域内容-->
                        <p id="sumNum2">0</p>
                        <label for="">总销售量</label>
                    </div>
                    <ul class="count_list" id="countList2">
                        <!-- 右侧列表-->
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <!-- 经销商TOP10 产品TOP5 -->
        <div class="section left_section rank_panel">
            <div id="11" class="header tabheader">
                <a class="active" onclick="showTab(event,1)">经销商TOP10</a><a onclick="showTab(event,2)">产品TOP5</a>
            </div>
            <div class="tabbody">
                <div class="tabpanel">
                    <!--经销商TOP10内容-->
                    <div class="content">
                        <!-- 排行标尺-->
                        <div class="scale rank_scale">
                            <p style="color:#b2f1a6;">1</p>
                            <p style="color:#a9e7fe;">2</p>
                            <p style="color:#fec8a6;">3</p>
                            <p>4</p>
                            <p>5</p>
                            <p>6</p>
                            <p>7</p>
                            <p>8</p>
                            <p>9</p>
                            <p>10</p>
                        </div>
                        <!-- 右侧名次数量-->
                        <div class="scale number_rank" id="numberRank">
                            <p>3000</p>

                            <p>2400</p>

                            <p>2200</p>

                            <p>1900</p>

                            <p>1780</p>

                            <p>1700</p>

                            <p>1500</p>

                            <p>1100</p>

                            <p>750</p>

                            <p>600</p>
                        </div>
                        <!-- 中间数量虚线-->
                        <div class="scale rank_dashed">
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                        </div>
                        <!-- 底部数量标尺-->
                        <div class="scale number_scale" id="numberScale">
                            <span>600</span><!--
                                --><span>1200</span><!--
                                --><span>1800</span><!--
                                --><span>2400</span><!--
                                --><span>3000</span>
                        </div>
                        <div class="chart">

                            <ul id="chartUl">
                                <li style="width: 250px;background: #b2f1a6;"></li>
                                <li style="width: 220px;background: #a9e7fe;"></li>
                                <li style="width: 200px;background: #fec8a6;"></li>
                                <li style="width: 160px;"></li>
                                <li style="width: 150px"></li>
                                <li style="width: 130px;"></li>
                                <li style="width: 100px;"></li>
                                <li style="width: 80px;"></li>
                                <li style="width: 60px;"></li>
                                <li style="width: 50px;"></li>
                            </ul>
                            <span class="hover_text"></span>
                        </div>

                    </div>

                </div>
                <div class="tabpanel">
                    <!--产品TOP5内容-->
                    <div class="content">
                        <!-- 排行标尺-->
                        <div class="scale rank_scale">
                            <p style="color:#b2f1a6;">1</p>
                            <p style="color:#a9e7fe;">2</p>
                            <p style="color:#fec8a6;">3</p>
                            <p>4</p>
                            <p>5</p>
                        </div>
                        <!-- 右侧名次数量-->
                        <div class="scale number_rank" id="numberRank2">
                            <p>3000</p>
                            <p>2400</p>
                            <p>2200</p>
                            <p>1900</p>
                            <p>1780</p>
                        </div>
                        <!-- 中间数量虚线-->
                        <div class="scale rank_dashed">
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                        </div>
                        <!-- 底部数量标尺-->
                        <div class="scale number_scale" id="numberScale2">
                            <span>600</span><!--
                                --><span>1200</span><!--
                                --><span>1800</span><!--
                                --><span>2400</span><!--
                                --><span>3000</span>
                        </div>
                        <div class="chart">

                            <ul id="chartUl2">
                                <li style="width: 250px;background: #b2f1a6;"></li>
                                <li style="width: 220px;background: #a9e7fe;"></li>
                                <li style="width: 200px;background: #fec8a6;"></li>
                                <li style="width: 160px;"></li>
                                <li style="width: 150px"></li>
                            </ul>

                            <span class="hover_text"></span>
                        </div>

                    </div>

                </div>
            </div>
        </div>
        <!-- 年度申请量 -->
        <div class="section center_section year_apply">
            <div class="header">
                年度申请量
            </div>
            <div class="content">
                <div class="scale money_scale" id="leftScale">
                    <p>2500</p>
                    <p>2000</p>
                    <p>1500</p>
                    <p>1000</p>
                    <p>500</p>
                </div>

                <div class="chart" id="applyChart" style="left: 51px;">
                    <!-- 嵌入SVG折线-->
                    <svg width="358" height="200" version="1.1"
                         xmlns="http://www.w3.org/2000/svg" style="position: absolute;right:8px;" id="polylineSvg">
                        <polyline id="polyline" points="0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0"
                                  style="fill:none;stroke:#fd7676;stroke-width:2"/>
                    </svg>
                    <div id="polylineVmlDoc" style="position: absolute;right:8px">

                    </div>
                    <ul id="applyNums" style="right: 8px;">
                        <!--<li style="height: 0px;" data-num="0" data-month="1"></li>-->-->
                    </ul>
                    <div class="top_scale" id="applyLineTop"></div>
                    <div class="bottom_scale" id="applyLineBottom"></div>
                    <span class="now_number" id="applyCurrentNum"></span>
                </div>
                <div class="scale month_scale" id="bottomScale" style="left: auto;right: 13px;">
                    <!--<span>1</span>-->
                </div>
            </div>

        </div>

        <!-- 年度放款量-->
        <div class="section right_section year_money">
            <div class="header">
                年度放款量
            </div>
            <div class="content">
                <div class="scale money_scale" id="leftScale2">
                    <p>6000万</p>
                    <p>4800万</p>
                    <p>3600万</p>
                    <p>2400万</p>
                    <p>1200万</p>
                </div>
                <div class="chart" id="moneyChart" style="left: 56px;">
                    <ul id="countNums" style="right: 15px;">
                        <!--<li style="height: 0;" data-num="0" data-month="20160101"></li>-->
                    </ul>
                    <div class="top_scale" id="countLineTop"></div>
                    <div class="bottom_scale" id="countLineBottom"></div>
                    <span class="now_number" id="countCurrentNum"></span>
                </div>
                <div class="scale month_scale" id="bottomScale2" style="left: auto;right: 20px;">
                    <!--<span>1</span>-->
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    //获得当前月份
    var nowDate = new Date();
    var nowMonth = nowDate.getMonth();
    if(document.createElementNS){
    }else{
        document.namespaces.add("v", "urn:schemas-microsoft-com:vml");
        var style = document.createStyleSheet();
        var VMLel = ['line','stroke','polyline','fill','oval','arc'];
        for (var i=0,l=VMLel.length;i<l;i++) {
            style.addRule('v\\:'+VMLel[i], "behavior: url(#default#VML);");
        }
    }
    //判断屏幕分辨率
    (function(){
        var screenHeight = window.screen.height;
        //var sereenWidth = window.screen.width;
        //var validHeight = window.screen.availHeight;
        if(screenHeight > 900){
            document.getElementById("home_container").className = "boss_container container_big";
        }
        if(screenHeight <= 768){
            document.getElementById("home_container").className = "boss_container container_small";
        }
    })();
    //tab切换
    function showTab(e,num){
        var e = e ? e : window.event;
        var targetEle = e.srcElement || e.target;
        targetEle.className = "active";
        var divList = targetEle.parentNode.parentNode.getElementsByTagName("div");
        var panelList = [];
        for(var i = 0 ; i < divList.length ; i++){
            if(divList[i].className == "tabpanel"){
                panelList.push(i);
            }
        }
        if(num==1){
            divList[panelList[0]].style.display = "block";
            targetEle.parentNode.getElementsByTagName("a")[1].className="";
            divList[panelList[1]].style.display = "none";
        }else{
            divList[panelList[1]].style.display = "block";
            targetEle.parentNode.getElementsByTagName("a")[0].className="";
            divList[panelList[0]].style.display = "none";
        }
    }

    /*
     * 年度申请量赋值
     */
    var chartEle = document.getElementById("applyChart");
    var leftScaleEle = document.getElementById("leftScale").getElementsByTagName("p");
    var monthScaleEle = document.getElementById("bottomScale");
    var monthLineEle = document.getElementById("applyNums");
    var polylineSvgEle = document.getElementById("polylineSvg");
    var polyLineEle = document.getElementById("polyline");
    var polyLineVmlEle = document.getElementById("polylineVmlDoc");
    var applyCurrentNumEle = document.getElementById("applyCurrentNum");
    var maxLineEle = document.getElementById("applyLineTop");
    var minLineEle = document.getElementById("applyLineBottom");

    //    绘画折线及竖线组件 common  年度申请量   年度放款量
    var polyLineDataObj = {
        initData : [{"month":"201512","num":500}],//初始化历史所有月份的数据

        //最大月份数据
        maxData : {
            "num": 0,//申请数
            "month": 0,//月份
            "index": 0//数组索引
        },

        //最小月份数据
        minData : {
            "num": 10000000000,//申请数
            "month": 0,//月份
            "index": 12//数组索引
        },
        maxHeightPx: 200,//竖线最大高度像素数
        horizontalSpacePx: 30,//月份间隔
        points: "",//折线坐标

        //初始化最大最小数据
        setMaxMinData : function(){
            //console.log(this);
            for(var i = 0 ; i<this.initData.length ; i++){
                if(this.initData[i].num>=this.maxData.num){
                    this.maxData = {
                        "num": this.initData[i].num,//申请数
                        "month": this.initData[i].month,//月份
                        "index": i//数组索引
                    };
                }
                if(this.initData[i].num > 0 && this.initData[i].num <= this.minData.num){
                    this.minData = {
                        "num": this.initData[i].num,//申请数
                        "month": this.initData[i].month,//月份
                        "index": i//数组索引
                    };
                }
            }
        },

        //初始化左边刻度
        setLeftNum : function(leftScaleEle){
            leftScaleEle[0].innerHTML = this.maxData.num;
            leftScaleEle[1].innerHTML = parseInt(this.maxData.num/5*4);
            leftScaleEle[2].innerHTML = parseInt(this.maxData.num/5*3);
            leftScaleEle[3].innerHTML = parseInt(this.maxData.num/5*2);
            leftScaleEle[4].innerHTML = parseInt(this.maxData.num/5);
        },

        //设置下边月份，竖线高度，折线，绑定鼠标移入显示申请数
        setMonthData : function(chartEle,monthScaleEle,monthLineEle,currentNumEle){
            for(var i = 0 ; i<this.initData.length ; i++){

                //设置底部刻度
                var newSpan = document.createElement("span");
                newSpan.innerHTML = this.initData[i].month.substr(4,2);
                monthScaleEle.appendChild(newSpan);
                this.initData[i].lineHeight = this.maxHeightPx/this.maxData.num * this.initData[i].num;
                this.initData[i].pointX = i*(this.horizontalSpacePx);
                this.initData[i].pointY = this.maxHeightPx - this.initData[i].lineHeight;
                this.points += (this.initData[i].pointX + "," + this.initData[i].pointY + " ");

                //设置月份高度
                var newli = document.createElement("li");
                newli.style.height = this.initData[i].lineHeight + "px";
                newli.style.height = this.initData[i].lineHeight + "px";
                newli.setAttribute("data-month",this.initData[i].month);
                newli.setAttribute("data-num",this.initData[i].num);
                newli.setAttribute("data-pointY",this.initData[i].pointY);
                monthLineEle.appendChild(newli);
                var space = this.horizontalSpacePx;
                //鼠标移动上去显示申请数目
                (function(){
                    var num = i ;
                    var newEle = newli;
                    var liSpace = space;
                    newEle.onmouseover = function(event) {
                        //console.log(event.target.offsetLeft + " " + monthLineEle.offsetLeft + " " + liSpace + " " + currentNumEle.clientWidth);
                        var event = window.event || event;
                        currentNumEle.innerHTML = newEle.getAttribute("data-month").substr(0, 4) + "/" + newEle.getAttribute("data-month").substr(4) + " " + newEle.getAttribute("data-num");
                        currentNumEle.style.top = newEle.getAttribute("data-pointY") + 'px';
                        var left = 0;
                        if(event.target){
                            if(liSpace < 30){
                                left = event.target.offsetLeft||event.target.offsetX + monthLineEle.offsetLeft||monthLineEle.offsetX ;
                                //判断是不是最后两个月，设置数据显示在原点前面
                                if (left > chartEle.clientWidth - currentNumEle.clientWidth ) {
                                    left = event.target.offsetLeft||event.target.offsetX + monthLineEle.offsetLeft||monthLineEle.offsetX  - currentNumEle.clientWidth ;
                                }
                            }else{
                                left = event.target.offsetLeft||event.target.offsetX + monthLineEle.offsetLeft||monthLineEle.offsetX + liSpace;
                                //判断是不是最后两个月，设置数据显示在原点前面
                                if (left > chartEle.clientWidth - currentNumEle.clientWidth - 10) {
                                    left = event.target.offsetLeft||event.target.offsetX + monthLineEle.offsetLeft||monthLineEle.offsetX + liSpace - currentNumEle.clientWidth - 10;
                                }
                            }
                        }else{

                            if(liSpace < 30){
                                left = event.srcElement.offsetLeft + monthLineEle.offsetLeft ;
                                //判断是不是最后两个月，设置数据显示在原点前面
                                if (left > chartEle.clientWidth - currentNumEle.clientWidth ) {
                                    left = event.srcElement.offsetLeft + monthLineEle.offsetLeft  - currentNumEle.clientWidth ;
                                }
                            }else{

                                left = event.srcElement.offsetLeft + monthLineEle.offsetLeft + liSpace;
                                //判断是不是最后两个月，设置数据显示在原点前面
                                if (left > chartEle.clientWidth - currentNumEle.clientWidth - 10) {
                                    left = event.srcElement.offsetLeft + monthLineEle.offsetLeft + liSpace - currentNumEle.clientWidth - 10;
                                }
                            }
                        }
                        currentNumEle.style.left = left + 'px';
                    }
                })();
            }

        },
        setSvgPolyline: function(polyLineEle,polyLineVmlEle){
            if(document.createElementNS){
                //支持SVG
                polyLineEle.setAttribute("points",this.points);
            }else{
                var polyLineVml = document.createElement("v:polyline");
                polyLineVml.strokeweight = "2px";
                polyLineVml.strokecolor = "#fd7676";
                polyLineVml.points = this.points;
                polyLineVmlEle.appendChild(polyLineVml);
            }
        },
        setMaxMinLine : function(monthLineEle,maxLineEle,minLineEle){
            //设置最多次月份颜色
            monthLineEle.getElementsByTagName("li")[this.maxData.index].className = "max";
            monthLineEle.getElementsByTagName("li")[this.minData.index].className = "min";
            //设置横线长度
//            maxLineEle.style.width = this.maxData.index * this.horizontalSpacePx + "px";
        }
    };

    //判断传递的数据是否够12个月 common  年度申请量   年度放款量
    function initChartData(numArr){
        //判断数据是否够12个月
        var len = numArr.length;
        if(len<12) {
            for (var i = 0; i < 12 - len; i++) {
                var month = getMonth(i);
                var monthData = {};
                monthData.month = month;
                monthData.num = 0;
                numArr.unshift(monthData);
            }
        }
        function getMonth(num){
            if((nowMonth+1) - len - num <= 0){
                if((nowMonth+1) - len - num + 12 <10){
                    return (nowDate.getFullYear()-1)+""+"0"+""+((nowMonth+1) - len - num + 12);
                }  else{
                    return (nowDate.getFullYear()-1)+""+((nowMonth+1) - len - num + 12)
                }
            }else{
                if((nowMonth+1) - len - num <10){
                    return (nowDate.getFullYear()-1)+""+"0"+""+((nowMonth+1) - len - num );
                }  else{
                    return (nowDate.getFullYear()-1)+""+((nowMonth+1) - len - num)
                }
            }
        }
        return numArr;
    }

    //年度申请量调用
    initPolyline([
        {"month":"201510","num":240},
        {"month":"201511","num":200},
        {"month":"201512","num":340},
        {"month":"201601","num":600},
        {"month":"201602","num":480},
        {"month":"201603","num":320},
        {"month":"201604","num":300},
        {"month":"201605","num":480},
        {"month":"201606","num":640},
        {"month":"201607","num":700},
        {"month":"201608","num":780},
        {"month":"201609","num":540},
        {"month":"201610","num":700},
        {"month":"201611","num":780}]);

    //初始化年度申请量数据
    var applyData;
    function initPolyline(numArr){
        var initData = initChartData(numArr);
//        if(!Object.create){
            applyData = new Object(polyLineDataObj)
//        }else{
//            applyData = Object.create(polyLineDataObj);
//        }
        polylineSvgEle.setAttribute("width" , applyData.horizontalSpacePx*(initData.length-1) + "px");
        polyLineVmlEle.setAttribute("width" , applyData.horizontalSpacePx*(initData.length-1) + "px");
        monthLineEle.style.width = applyData.horizontalSpacePx*(initData.length) + "px";
        monthScaleEle.style.width = applyData.horizontalSpacePx*(initData.length) + "px";
        applyData.initData = initData;
        applyData.setMaxMinData();
        applyData.setLeftNum(leftScaleEle);
        applyData.setMonthData(chartEle,monthScaleEle,monthLineEle,applyCurrentNumEle);
        applyData.setSvgPolyline(polyLineEle,polyLineVmlEle);
        applyData.setMaxMinLine(monthLineEle,maxLineEle,minLineEle);
    }

    //年度申请量鼠标拖动效果
    (function(){
        monthLineEle.onmousedown = function(event){
            var event = window.event || event;
            var startPoint = {
                x: event.x || event.pageX,//firefox pageX;其余x
                y: event.y || event.pageY,//firefox pageY;其余y
                lineRight: parseInt(polylineSvgEle.style.right),
                polyLineRight: parseInt(monthLineEle.style.right),
                monthScaleRight: parseInt(monthScaleEle.style.right)
            };
            monthLineEle.onmousemove = function(event){
                var event = window.event || event;
                var moveSpace = 0;
                if(event.x){
                    moveSpace = event.x  - startPoint.x;
                }else{
                    moveSpace = event.pageX  - startPoint.x;
                }
                if((startPoint.lineRight - moveSpace) >= 8){
                    //向右设置最大可移动距离
                    polylineSvgEle.style.right = "8px";
                    polyLineVmlEle.style.right = "8px";
                    monthLineEle.style.right = "8px";
                    monthScaleEle.style.right = "13px";
                    polyLineVmlEle.style.right = "8px";
                }else if(startPoint.polyLineRight - moveSpace   < (chartEle.clientWidth - applyData.horizontalSpacePx * applyData.initData.length + 20)){
                    //向左最大可移动距离
                    polylineSvgEle.style.right = chartEle.clientWidth - applyData.horizontalSpacePx * applyData.initData.length + 20 + "px";
                    polyLineVmlEle.style.right = chartEle.clientWidth - applyData.horizontalSpacePx * applyData.initData.length + 20 + "px";
                    monthLineEle.style.right = chartEle.clientWidth - applyData.horizontalSpacePx * applyData.initData.length + 20 + "px";
                    monthScaleEle.style.right = chartEle.clientWidth - applyData.horizontalSpacePx * applyData.initData.length + 20 + "px";
                }else{
                    try{
                        polylineSvgEle.style.right = startPoint.lineRight - (event.x  - startPoint.x) +"px";
                        polyLineVmlEle.style.right = startPoint.lineRight - (event.x  - startPoint.x) +"px";
                        monthLineEle.style.right = startPoint.polyLineRight - (event.x  - startPoint.x) +"px";
                        monthScaleEle.style.right = parseInt(startPoint.monthScaleRight - (event.x  - startPoint.x)) +"px";
                    }catch(e){
                        alert(startPoint.monthScaleRight+ " "+ event.x +" "+startPoint.x + " " +(event.x  - startPoint.x) + " "+ moveSpace );
                    }
                }

            };
            document.onmouseup = function(){
                monthLineEle.onmousemove = null;
            }
        };
        document.onmouseup = function(){
            monthLineEle.onmousemove = null;
        }
    })();



    /*
     * 年度放款量赋值
     */
    var chartEle2 = document.getElementById("moneyChart");
    var leftScaleEle2 = document.getElementById("leftScale2").getElementsByTagName("p");
    var monthScaleEle2 = document.getElementById("bottomScale2");
    var monthLineEle2 = document.getElementById("countNums");
    var currentNumEle2 = document.getElementById("countCurrentNum");
    var maxLineEle2 = document.getElementById("countLineTop");
    var minLineEle2 = document.getElementById("countLineBottom");
    var countData;
    setMoneyCount([
        {"month":"201510","num":2400000},
        {"month":"201511","num":2010000},
        {"month":"201512","num":3430000},
        {"month":"201601","num":6050000},
        {"month":"201602","num":4880000},
        {"month":"201603","num":3290000},
        {"month":"201604","num":3012000},
        {"month":"201605","num":4820000},
        {"month":"201606","num":6440000},
        {"month":"201607","num":7030000},
        {"month":"201608","num":7880000},
        {"month":"201609","num":5420000},
        {"month":"201610","num":7030000},
        {"month":"201611","num":3840000}]);
    function setMoneyCount(numArr){
        var initData = initChartData(numArr);
//        if(!Object.create){
            countData = new Object(polyLineDataObj)
//        }else{
//            countData = Object.create(polyLineDataObj);
//        }

        countData.horizontalSpacePx = 26;
        monthLineEle2.style.width = countData.horizontalSpacePx*(initData.length) + "px";
        monthScaleEle2.style.width = countData.horizontalSpacePx*(initData.length) + "px";
        countData.initData = initData;
        countData.setMaxMinData();
        countData.setLeftNum(leftScaleEle2);
        countData.setMonthData(chartEle2,monthScaleEle2,monthLineEle2,currentNumEle2);
        countData.setMaxMinLine(monthLineEle2,maxLineEle2,minLineEle2);
        //处理左侧刻度
        for(var i = 0 ; i<leftScaleEle2.length ; i++){
            leftScaleEle2[i].innerHTML = parseInt(leftScaleEle2[i].innerHTML/10000) +"万";
        }
    }
    //年度放款量鼠标拖动效果
    (function(){
        monthLineEle2.onmousedown = function(event){
            var event = window.event || event;
            var startPoint = {
                x: event.x || event.pageX,//firefox pageX;其余x
                y: event.y || event.pageY,//firefox pageY;其余y
                polyLineRight: parseInt(monthLineEle2.style.right),
                monthScaleRight: parseInt(monthScaleEle2.style.right)
            };
            monthLineEle2.onmousemove = function(event){
                var event = window.event || event;
                var moveSpace = 0;
                if(event.x){
                    moveSpace = event.x  - startPoint.x;
                }else{
                    moveSpace = event.pageX  - startPoint.x;
                }
                if((startPoint.polyLineRight - moveSpace) >= 8){
                    //向右设置最大可移动距离
                    monthLineEle2.style.right = "8px";
                    monthScaleEle2.style.right = "13px";
                }else if(startPoint.polyLineRight - moveSpace   < (chartEle2.clientWidth - countData.horizontalSpacePx * countData.initData.length)){
                    //向左最大可移动距离
                    monthLineEle2.style.right = chartEle2.clientWidth - countData.horizontalSpacePx * countData.initData.length + "px";
                    monthScaleEle2.style.right = chartEle2.clientWidth - countData.horizontalSpacePx * countData.initData.length + "px";
                }else{
                    monthLineEle2.style.right = startPoint.polyLineRight - moveSpace +"px";
                    monthScaleEle2.style.right = startPoint.monthScaleRight - moveSpace +"px";
                }

            };
            document.onmouseup = function(){
                monthLineEle2.onmousemove = null;
            }
        };
        document.onmouseup = function(){
            monthLineEle2.onmousemove = null;
        }
    })();

    //    按渠道／车型统计   传入按照销量排序的数据
    var carcountObj = {
//        渠道统计数据
        channel:{
            arr: [{names:"其他",num:90},{names:"SP",num:300},{names:"经销商",num:800}],
            sumnum: 1190
        },
//        车型统计数据
        carmodel: {
            arr: [{names:"二手车",num:300},{names:"新车",num:700}],
            sumnum: 1000
        }
    };
    setAcr(carcountObj.channel.arr,carcountObj.channel.sumnum,"circlePic","coverCircle","sumNum","countList");
    setAcr(carcountObj.carmodel.arr,carcountObj.carmodel.sumnum,"circlePic2","coverCircle2","sumNum2","countList2");
    function setAcr(arr,sumNum,circlePicId,coverCircleId,sumNumId,countListId){

        var circlePicEle = document.getElementById(circlePicId);
        var coverCircleEle = document.getElementById(coverCircleId);
        var sumNumEle = document.getElementById(sumNumId);
        var countListEle = document.getElementById(countListId);

        var circleObj = {
            cx: 60,
            cy: 60,
            cr: 60
        };
        var apaths = [];
        var rotateSum = 0;
        sumNumEle.innerHTML = sumNum;
        for(var i = 0 ;i <arr.length ; i ++ ){

            rotateSum+=(arr[i].num/sumNum)*360;;
            apaths.push({
                names: arr[i].names,
                num: arr[i].num,
                mx: i==0 ? 60 : apaths[i-1].pathx,
                my: i==0 ? 0 : apaths[i-1].pathy,
                pathx: i==0 ? circleObj.cx + circleObj.cr*Math.sin(arr[i].num/sumNum*2*Math.PI) : circleObj.cx + circleObj.cr*Math.sin((arr[i].num/sumNum+apaths[i-1].rotate)*2*Math.PI),
                pathy : i==0 ? circleObj.cy + circleObj.cr*(Math.cos(arr[i].num/sumNum*2*Math.PI))*-1 : circleObj.cy + circleObj.cr*Math.cos((arr[i].num/sumNum+apaths[i-1].rotate)*2*Math.PI)*-1,
                isBigArc : arr[i].num/sumNum*360>180 ? 1: 0,
                rotate: rotateSum/360,
                rotateArc: rotateSum,
                percent: arr[i].num/sumNum
            });
            var curPath = apaths[apaths.length-1];
            var pathColor = "#ddd";
            switch (i%10){
                case 0:
                    pathColor = "#fda9a4"
                    break;
                case 1:
                    pathColor = "#fe9696"
                    break;
                case 2:
                    pathColor = "#b0efc0"
                    break;
                case 3:
                    pathColor = "#e7efb0"
                    break;
                case 4:
                    pathColor = "#efd7b0"
                    break;
                case 5:
                    pathColor = "#a9dffe"
                    break;
                default:
                    pathColor = "#ddd"
            }


            if(i == arr.length-1){
                pathColor = "#81edac";
            }else if(i == arr.length-2){
                pathColor = "#a9e7fe";
            }else if(i == arr.length-3) {
                pathColor = "#fec8a6";
            }else{

            }
            if(document.createElementNS){
                //支持SVG的
                var newPath = document.createElementNS('http://www.w3.org/2000/svg',"path");

                newPath.setAttribute("d","M " + curPath.mx + " " + curPath.my +" A 60 60 "+ 0  +" "+ curPath.isBigArc +" 1 "+curPath.pathx+" "+curPath.pathy+" L 60 60 Z");
                newPath.setAttribute("stroke", "#fff");
                newPath.setAttribute("data-text",curPath.names);
                newPath.setAttribute("fill", pathColor);
                newPath.setAttribute("data-num",curPath.num);
                newPath.setAttribute("data-precent",curPath.percent*100+'%');
                circlePicEle.insertBefore(newPath,coverCircleEle);
            }else{
                //不支持SVG，使用VML
                var circlePicVmlEle = document.getElementById(circlePicId+"Vml");
                var newPathVml = document.createElement("v:Arc");

                newPathVml.setAttribute("Filled",false);
                newPathVml.setAttribute("StartAngle",parseInt(curPath.rotateArc-curPath.num/sumNum*360));

                newPathVml.setAttribute("EndAngle",parseInt(curPath.rotateArc));
                newPathVml.strokecolor = pathColor;
                newPathVml.strokeweight = "14pt";
                newPathVml.setAttribute("style","position:absolute; top:8px;left:8px;");
                newPathVml.style.width = "108";
                newPathVml.style.height = "108";
                circlePicVmlEle.appendChild(newPathVml);
            }
            //右侧列表
            (function(){
                var newLiEle = document.createElement("li");
                var spanPrecentEle = document.createElement("span");
                var spanNamesEle = document.createElement("span");
                var spanNumEle = document.createElement("span");
                spanPrecentEle.className = "count_precent";
                spanNamesEle.className = "count_names";
                spanNumEle.className = "count_names";
                spanPrecentEle.style.background = pathColor;
                spanPrecentEle.innerHTML = (curPath.percent*100*10000/10000).toFixed(2) + '%';
                spanNamesEle.innerHTML = curPath.names+": ";
                spanNumEle.innerHTML = curPath.num;
                newLiEle.appendChild(spanPrecentEle);
                newLiEle.appendChild(spanNamesEle);
                newLiEle.appendChild(spanNumEle);
                countListEle.insertBefore(newLiEle,countListEle.firstChild);
            })();

        }

    }

    //    中间区域统计数据回显{sumcount:{num:300000,per:200},backmoney:{num:300000,per:66.66%},expectnum:{num:20,per:1},recovercar:{num:10,per:0.1}}
    setSumcount({sumcount:{num:300000,per:200},backmoney:{num:300000,per:"66.66"},expectnum:{num:20,per:1},recovercar:{num:10,per:0.1}});
    function setSumcount(obj){
        document.getElementById("sumOne").innerHTML = obj.sumcount.num;
        document.getElementById("perOne").innerHTML = obj.sumcount.per;
        document.getElementById("sumTwo").innerHTML = obj.backmoney.num;
        document.getElementById("perTwo").innerHTML = obj.backmoney.per;
        document.getElementById("sumThree").innerHTML = obj.expectnum.num;
        document.getElementById("perThree").innerHTML = obj.expectnum.per;
        document.getElementById("sumFour").innerHTML = obj.recovercar.num;
        document.getElementById("perFour").innerHTML = obj.recovercar.per;
    }

    //    经销商TOP10 产品TOP5 {company:{num1:{names:"XX公司",num:3000},....},product:{num1:{names:"XX产品",num:2000},....}}
    var topData = {
        company: {
            num1: {names:"XX公司1",num:3000},
            num2: {names:"XX公司2",num:2400},
            num3: {names:"XX公司3",num:2200},
            num4: {names:"XX公司4",num:1900},
            num5: {names:"XX公司5",num:1780},
            num6: {names:"XX公司6",num:1700},
            num7: {names:"XX公司7",num:1500},
            num8: {names:"XX公司8",num:1100},
            num9: {names:"XX公司9",num:220},
            num10: {names:"XX公司10",num:200}
        },
        product: {
            num1: {names:"XX产品1",num:3000},
            num2: {names:"XX产品2",num:2400},
            num3: {names:"XX产品3",num:2000},
            num4: {names:"XX产品4",num:1500},
            num5: {names:"XX产品5",num:0}
        }
    };

    //    设置经销商TOP10 产品TOP5
    setTopCount(topData.company,"chartUl","numberRank","numberScale",10);
    setTopCount(topData.product,"chartUl2","numberRank2","numberScale2",5);
    function setTopCount(objchild,companyEleId,numberRankEleId,numberScaleEleId,topNum){
        var liList = document.getElementById(companyEleId).getElementsByTagName("li");//条状的li数组
        var numberRankList = document.getElementById(numberRankEleId).getElementsByTagName("p");//右侧li的销售量
        var numberScaleList = document.getElementById(numberScaleEleId).getElementsByTagName("span");//底部的刻度

        var maxNum = objchild.num1.num;
        var minNum = objchild["num"+topNum].num;
        if(minNum==0){
            minNum = maxNum/5;
        }

        var bottomUnit = (maxNum-minNum)/4;
        var unitPoint = 50/bottomUnit;

        //    设置底部刻度
        for(var i = 0 ;i < 5 ; i ++ ){
            numberScaleList[i].innerHTML = minNum + bottomUnit*i;
        }
        //    设置右侧刻度
        for(var j = 0 ;j < topNum ; j ++ ){
            numberRankList[j].innerHTML = objchild["num"+(j+1)].num;
            liList[j].setAttribute("data-text",objchild["num"+(j+1)].names);
            liList[j].style.width = (parseInt((objchild["num"+(j+1)].num-minNum)*unitPoint) + 50) +'px';
            liList[j].className = "";
            (function(){
                var curnum =  j;
                liList[j].onmouseover = function(){
                    var textEle = document.getElementById(companyEleId).parentNode.getElementsByTagName("span")[0];
                    textEle.innerHTML = objchild["num"+(curnum+1)].names;
                    if(topNum == 10){
                        textEle.style.top = ((curnum+1)*20-15) +"px";
                    }else{
                        textEle.style.top = ((curnum+1)*40-20) +"px";
                    }
                }

            })()
        }
    }
</script>
</body>
</html>